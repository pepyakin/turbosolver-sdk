// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: api.capnp

package me.pepyakin.turbosolver.capnp;

public final class Api {
  public static class Req {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Req.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.CREATE_SOLVER_REQ;
          case 1 : return Which.SOLVE_REQ;
          case 2 : return Which.DESTROY_REQ;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getId() {
        return _getIntField(0);
      }
      public final void setId(int value) {
        _setIntField(0, value);
      }

      public final boolean isCreateSolverReq() {
        return which() == Req.Which.CREATE_SOLVER_REQ;
      }
      public final me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.Builder getCreateSolverReq() {
        assert which() == Req.Which.CREATE_SOLVER_REQ:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.factory, 0, null, 0);
      }
      public final void setCreateSolverReq(me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.Reader value) {
        _setShortField(2, (short)Req.Which.CREATE_SOLVER_REQ.ordinal());
        _setPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.factory,0, value);
      }
      public final me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.Builder initCreateSolverReq() {
        _setShortField(2, (short)Req.Which.CREATE_SOLVER_REQ.ordinal());
        return _initPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.factory,0, 0);
      }
      public final boolean isSolveReq() {
        return which() == Req.Which.SOLVE_REQ;
      }
      public final me.pepyakin.turbosolver.capnp.Api.SolveReq.Builder getSolveReq() {
        assert which() == Req.Which.SOLVE_REQ:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.SolveReq.factory, 0, null, 0);
      }
      public final void setSolveReq(me.pepyakin.turbosolver.capnp.Api.SolveReq.Reader value) {
        _setShortField(2, (short)Req.Which.SOLVE_REQ.ordinal());
        _setPointerField(me.pepyakin.turbosolver.capnp.Api.SolveReq.factory,0, value);
      }
      public final me.pepyakin.turbosolver.capnp.Api.SolveReq.Builder initSolveReq() {
        _setShortField(2, (short)Req.Which.SOLVE_REQ.ordinal());
        return _initPointerField(me.pepyakin.turbosolver.capnp.Api.SolveReq.factory,0, 0);
      }
      public final boolean isDestroyReq() {
        return which() == Req.Which.DESTROY_REQ;
      }
      public final me.pepyakin.turbosolver.capnp.Api.DestroyReq.Builder getDestroyReq() {
        assert which() == Req.Which.DESTROY_REQ:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.DestroyReq.factory, 0, null, 0);
      }
      public final void setDestroyReq(me.pepyakin.turbosolver.capnp.Api.DestroyReq.Reader value) {
        _setShortField(2, (short)Req.Which.DESTROY_REQ.ordinal());
        _setPointerField(me.pepyakin.turbosolver.capnp.Api.DestroyReq.factory,0, value);
      }
      public final me.pepyakin.turbosolver.capnp.Api.DestroyReq.Builder initDestroyReq() {
        _setShortField(2, (short)Req.Which.DESTROY_REQ.ordinal());
        return _initPointerField(me.pepyakin.turbosolver.capnp.Api.DestroyReq.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.CREATE_SOLVER_REQ;
          case 1 : return Which.SOLVE_REQ;
          case 2 : return Which.DESTROY_REQ;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final int getId() {
        return _getIntField(0);
      }

      public final boolean isCreateSolverReq() {
        return which() == Req.Which.CREATE_SOLVER_REQ;
      }
      public boolean hasCreateSolverReq() {
        return !_pointerFieldIsNull(0);
      }
      public me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.Reader getCreateSolverReq() {
        assert which() == Req.Which.CREATE_SOLVER_REQ:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverReq.factory,0,null, 0);
      }

      public final boolean isSolveReq() {
        return which() == Req.Which.SOLVE_REQ;
      }
      public boolean hasSolveReq() {
        return !_pointerFieldIsNull(0);
      }
      public me.pepyakin.turbosolver.capnp.Api.SolveReq.Reader getSolveReq() {
        assert which() == Req.Which.SOLVE_REQ:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.SolveReq.factory,0,null, 0);
      }

      public final boolean isDestroyReq() {
        return which() == Req.Which.DESTROY_REQ;
      }
      public boolean hasDestroyReq() {
        return !_pointerFieldIsNull(0);
      }
      public me.pepyakin.turbosolver.capnp.Api.DestroyReq.Reader getDestroyReq() {
        assert which() == Req.Which.DESTROY_REQ:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.DestroyReq.factory,0,null, 0);
      }

    }

    public enum Which {
      CREATE_SOLVER_REQ,
      SOLVE_REQ,
      DESTROY_REQ,
      _NOT_IN_SCHEMA,
    }
  }


  public static class Resp {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Resp.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.ERR;
          case 1 : return Which.OK;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getId() {
        return _getIntField(0);
      }
      public final void setId(int value) {
        _setIntField(0, value);
      }

      public final boolean isErr() {
        return which() == Resp.Which.ERR;
      }
      public final int getErr() {
        assert which() == Resp.Which.ERR:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }
      public final void setErr(int value) {
        _setShortField(4, (short)Resp.Which.ERR.ordinal());
        _setIntField(1, value);
      }

      public final boolean isOk() {
        return which() == Resp.Which.OK;
      }
      public final me.pepyakin.turbosolver.capnp.Api.OkResp.Builder getOk() {
        assert which() == Resp.Which.OK:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.OkResp.factory, 0, null, 0);
      }
      public final void setOk(me.pepyakin.turbosolver.capnp.Api.OkResp.Reader value) {
        _setShortField(4, (short)Resp.Which.OK.ordinal());
        _setPointerField(me.pepyakin.turbosolver.capnp.Api.OkResp.factory,0, value);
      }
      public final me.pepyakin.turbosolver.capnp.Api.OkResp.Builder initOk() {
        _setShortField(4, (short)Resp.Which.OK.ordinal());
        return _initPointerField(me.pepyakin.turbosolver.capnp.Api.OkResp.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.ERR;
          case 1 : return Which.OK;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final int getId() {
        return _getIntField(0);
      }

      public final boolean isErr() {
        return which() == Resp.Which.ERR;
      }
      public final int getErr() {
        assert which() == Resp.Which.ERR:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }

      public final boolean isOk() {
        return which() == Resp.Which.OK;
      }
      public boolean hasOk() {
        return !_pointerFieldIsNull(0);
      }
      public me.pepyakin.turbosolver.capnp.Api.OkResp.Reader getOk() {
        assert which() == Resp.Which.OK:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.OkResp.factory,0,null, 0);
      }

    }

    public enum Which {
      ERR,
      OK,
      _NOT_IN_SCHEMA,
    }
  }


  public static class OkResp {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return OkResp.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.CREATE_SOLVER_RESP;
          case 1 : return Which.SOLVE_RESP;
          case 2 : return Which.DESTROY_RESP;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isCreateSolverResp() {
        return which() == OkResp.Which.CREATE_SOLVER_RESP;
      }
      public final me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.Builder getCreateSolverResp() {
        assert which() == OkResp.Which.CREATE_SOLVER_RESP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.factory, 0, null, 0);
      }
      public final void setCreateSolverResp(me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.Reader value) {
        _setShortField(0, (short)OkResp.Which.CREATE_SOLVER_RESP.ordinal());
        _setPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.factory,0, value);
      }
      public final me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.Builder initCreateSolverResp() {
        _setShortField(0, (short)OkResp.Which.CREATE_SOLVER_RESP.ordinal());
        return _initPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.factory,0, 0);
      }
      public final boolean isSolveResp() {
        return which() == OkResp.Which.SOLVE_RESP;
      }
      public final me.pepyakin.turbosolver.capnp.Api.SolveResp.Builder getSolveResp() {
        assert which() == OkResp.Which.SOLVE_RESP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.SolveResp.factory, 0, null, 0);
      }
      public final void setSolveResp(me.pepyakin.turbosolver.capnp.Api.SolveResp.Reader value) {
        _setShortField(0, (short)OkResp.Which.SOLVE_RESP.ordinal());
        _setPointerField(me.pepyakin.turbosolver.capnp.Api.SolveResp.factory,0, value);
      }
      public final me.pepyakin.turbosolver.capnp.Api.SolveResp.Builder initSolveResp() {
        _setShortField(0, (short)OkResp.Which.SOLVE_RESP.ordinal());
        return _initPointerField(me.pepyakin.turbosolver.capnp.Api.SolveResp.factory,0, 0);
      }
      public final boolean isDestroyResp() {
        return which() == OkResp.Which.DESTROY_RESP;
      }
      public final org.capnproto.Void getDestroyResp() {
        assert which() == OkResp.Which.DESTROY_RESP:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setDestroyResp(org.capnproto.Void value) {
        _setShortField(0, (short)OkResp.Which.DESTROY_RESP.ordinal());
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.CREATE_SOLVER_RESP;
          case 1 : return Which.SOLVE_RESP;
          case 2 : return Which.DESTROY_RESP;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isCreateSolverResp() {
        return which() == OkResp.Which.CREATE_SOLVER_RESP;
      }
      public boolean hasCreateSolverResp() {
        return !_pointerFieldIsNull(0);
      }
      public me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.Reader getCreateSolverResp() {
        assert which() == OkResp.Which.CREATE_SOLVER_RESP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.CreateSolverResp.factory,0,null, 0);
      }

      public final boolean isSolveResp() {
        return which() == OkResp.Which.SOLVE_RESP;
      }
      public boolean hasSolveResp() {
        return !_pointerFieldIsNull(0);
      }
      public me.pepyakin.turbosolver.capnp.Api.SolveResp.Reader getSolveResp() {
        assert which() == OkResp.Which.SOLVE_RESP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(me.pepyakin.turbosolver.capnp.Api.SolveResp.factory,0,null, 0);
      }

      public final boolean isDestroyResp() {
        return which() == OkResp.Which.DESTROY_RESP;
      }
      public final org.capnproto.Void getDestroyResp() {
        assert which() == OkResp.Which.DESTROY_RESP:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

    }

    public enum Which {
      CREATE_SOLVER_RESP,
      SOLVE_RESP,
      DESTROY_RESP,
      _NOT_IN_SCHEMA,
    }
  }


  public static class CreateSolverReq {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CreateSolverReq.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasGrid() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getGrid() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setGrid(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setGrid(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initGrid(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasGrid() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getGrid() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class SolveReq {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SolveReq.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getId() {
        return _getIntField(0);
      }
      public final void setId(int value) {
        _setIntField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getId() {
        return _getIntField(0);
      }

    }

  }


  public static class DestroyReq {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DestroyReq.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getId() {
        return _getIntField(0);
      }
      public final void setId(int value) {
        _setIntField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getId() {
        return _getIntField(0);
      }

    }

  }


  public static class CreateSolverResp {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CreateSolverResp.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getId() {
        return _getIntField(0);
      }
      public final void setId(int value) {
        _setIntField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getId() {
        return _getIntField(0);
      }

    }

  }


  public static class SolveResp {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SolveResp.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasSolution() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getSolution() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setSolution(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setSolution(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initSolution(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasSolution() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getSolution() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_a0ddad1aa7304bce =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ce\u004b\u0030\u00a7\u001a\u00ad\u00dd\u00a0" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0003\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0052\u0065\u0071\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u006f" +
   "\u006c\u0076\u0065\u0072\u0052\u0065\u0071\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0082\u000b\u0032\u00a4\u001b\u008d\u00f9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u006f\u006c\u0076\u0065\u0052\u0065\u0071" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u00fb\u005f\u00e2\u0032\u005b\u00b5\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0073\u0074\u0072\u006f\u0079\u0052" +
   "\u0065\u0071\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u008b\u0093\u0082\u0086\u00ba\u00b3\u00a5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_811606fa70edd713 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0013\u00d7\u00ed\u0070\u00fa\u0006\u0016\u0081" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0052\u0065\u0073\u0070\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0072\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006b\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c7\u0060\u00ae\u0038\u0010\u00fc\u003a\u00b1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b13afc1038ae60c7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c7\u0060\u00ae\u0038\u0010\u00fc\u003a\u00b1" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0003\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u004f\u006b\u0052\u0065\u0073\u0070" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u006f" +
   "\u006c\u0076\u0065\u0072\u0052\u0065\u0073\u0070" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00db\u008f\u009c\u008e\"\u008e\u00d1\u008f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u006f\u006c\u0076\u0065\u0052\u0065\u0073" +
   "\u0070\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u004c\u0049\u004b\u006f\u00be\u00bf\u008e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0073\u0074\u0072\u006f\u0079\u0052" +
   "\u0065\u0073\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f98d1ba4320b82e9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e9\u0082\u000b\u0032\u00a4\u001b\u008d\u00f9" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0043\u0072\u0065\u0061\u0074\u0065" +
   "\u0053\u006f\u006c\u0076\u0065\u0072\u0052\u0065" +
   "\u0071\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0067\u0072\u0069\u0064\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ffb55b32e25ffb06 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0006\u00fb\u005f\u00e2\u0032\u005b\u00b5\u00ff" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0053\u006f\u006c\u0076\u0065\u0052" +
   "\u0065\u0071\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a5b3ba8682938ba8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a8\u008b\u0093\u0082\u0086\u00ba\u00b3\u00a5" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0044\u0065\u0073\u0074\u0072\u006f" +
   "\u0079\u0052\u0065\u0071\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8fd18e228e9c8fdb =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00db\u008f\u009c\u008e\"\u008e\u00d1\u008f" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0043\u0072\u0065\u0061\u0074\u0065" +
   "\u0053\u006f\u006c\u0076\u0065\u0072\u0052\u0065" +
   "\u0073\u0070\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8ebfbe6f4b494c10 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0010\u004c\u0049\u004b\u006f\u00be\u00bf\u008e" +
   "\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u009c\u0025\u0098\u00aa\u00ea\u009a\u00f2\u00e7" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0070\u0069\u002e\u0063\u0061\u0070\u006e" +
   "\u0070\u003a\u0053\u006f\u006c\u0076\u0065\u0052" +
   "\u0065\u0073\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

